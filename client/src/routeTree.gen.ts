/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as FormsIndexRouteImport } from './routes/forms/index'
import { Route as SettingsProfileRouteImport } from './routes/settings/profile'
import { Route as SettingsAppearanceRouteImport } from './routes/settings/appearance'
import { Route as FormsCreateRouteImport } from './routes/forms/create'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as FormsFormIdSubmitRouteImport } from './routes/forms/$formId/submit'
import { Route as FormsFormIdSchemaRouteImport } from './routes/forms/$formId/schema'
import { Route as FormsFormIdPreviewRouteImport } from './routes/forms/$formId/preview'
import { Route as FormsFormIdManageRouteImport } from './routes/forms/$formId/manage'
import { Route as FormsFormIdSuccessSubmissionIdRouteImport } from './routes/forms/$formId/success.$submissionId'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsIndexRoute = FormsIndexRouteImport.update({
  id: '/forms/',
  path: '/forms/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsProfileRoute = SettingsProfileRouteImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsAppearanceRoute = SettingsAppearanceRouteImport.update({
  id: '/settings/appearance',
  path: '/settings/appearance',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsCreateRoute = FormsCreateRouteImport.update({
  id: '/forms/create',
  path: '/forms/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const FormsFormIdSubmitRoute = FormsFormIdSubmitRouteImport.update({
  id: '/forms/$formId/submit',
  path: '/forms/$formId/submit',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsFormIdSchemaRoute = FormsFormIdSchemaRouteImport.update({
  id: '/forms/$formId/schema',
  path: '/forms/$formId/schema',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsFormIdPreviewRoute = FormsFormIdPreviewRouteImport.update({
  id: '/forms/$formId/preview',
  path: '/forms/$formId/preview',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsFormIdManageRoute = FormsFormIdManageRouteImport.update({
  id: '/forms/$formId/manage',
  path: '/forms/$formId/manage',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsFormIdSuccessSubmissionIdRoute =
  FormsFormIdSuccessSubmissionIdRouteImport.update({
    id: '/forms/$formId/success/$submissionId',
    path: '/forms/$formId/success/$submissionId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/forms/create': typeof FormsCreateRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/forms': typeof FormsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/forms/$formId/manage': typeof FormsFormIdManageRoute
  '/forms/$formId/preview': typeof FormsFormIdPreviewRoute
  '/forms/$formId/schema': typeof FormsFormIdSchemaRoute
  '/forms/$formId/submit': typeof FormsFormIdSubmitRoute
  '/forms/$formId/success/$submissionId': typeof FormsFormIdSuccessSubmissionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/forms/create': typeof FormsCreateRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/forms': typeof FormsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/forms/$formId/manage': typeof FormsFormIdManageRoute
  '/forms/$formId/preview': typeof FormsFormIdPreviewRoute
  '/forms/$formId/schema': typeof FormsFormIdSchemaRoute
  '/forms/$formId/submit': typeof FormsFormIdSubmitRoute
  '/forms/$formId/success/$submissionId': typeof FormsFormIdSuccessSubmissionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/forms/create': typeof FormsCreateRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/forms/': typeof FormsIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/forms/$formId/manage': typeof FormsFormIdManageRoute
  '/forms/$formId/preview': typeof FormsFormIdPreviewRoute
  '/forms/$formId/schema': typeof FormsFormIdSchemaRoute
  '/forms/$formId/submit': typeof FormsFormIdSubmitRoute
  '/forms/$formId/success/$submissionId': typeof FormsFormIdSuccessSubmissionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/forms/create'
    | '/settings/appearance'
    | '/settings/profile'
    | '/forms'
    | '/settings'
    | '/forms/$formId/manage'
    | '/forms/$formId/preview'
    | '/forms/$formId/schema'
    | '/forms/$formId/submit'
    | '/forms/$formId/success/$submissionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/forms/create'
    | '/settings/appearance'
    | '/settings/profile'
    | '/forms'
    | '/settings'
    | '/forms/$formId/manage'
    | '/forms/$formId/preview'
    | '/forms/$formId/schema'
    | '/forms/$formId/submit'
    | '/forms/$formId/success/$submissionId'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/forms/create'
    | '/settings/appearance'
    | '/settings/profile'
    | '/forms/'
    | '/settings/'
    | '/forms/$formId/manage'
    | '/forms/$formId/preview'
    | '/forms/$formId/schema'
    | '/forms/$formId/submit'
    | '/forms/$formId/success/$submissionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  FormsCreateRoute: typeof FormsCreateRoute
  SettingsAppearanceRoute: typeof SettingsAppearanceRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  FormsIndexRoute: typeof FormsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  FormsFormIdManageRoute: typeof FormsFormIdManageRoute
  FormsFormIdPreviewRoute: typeof FormsFormIdPreviewRoute
  FormsFormIdSchemaRoute: typeof FormsFormIdSchemaRoute
  FormsFormIdSubmitRoute: typeof FormsFormIdSubmitRoute
  FormsFormIdSuccessSubmissionIdRoute: typeof FormsFormIdSuccessSubmissionIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/': {
      id: '/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof FormsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/appearance': {
      id: '/settings/appearance'
      path: '/settings/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsAppearanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/create': {
      id: '/forms/create'
      path: '/forms/create'
      fullPath: '/forms/create'
      preLoaderRoute: typeof FormsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/forms/$formId/submit': {
      id: '/forms/$formId/submit'
      path: '/forms/$formId/submit'
      fullPath: '/forms/$formId/submit'
      preLoaderRoute: typeof FormsFormIdSubmitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/$formId/schema': {
      id: '/forms/$formId/schema'
      path: '/forms/$formId/schema'
      fullPath: '/forms/$formId/schema'
      preLoaderRoute: typeof FormsFormIdSchemaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/$formId/preview': {
      id: '/forms/$formId/preview'
      path: '/forms/$formId/preview'
      fullPath: '/forms/$formId/preview'
      preLoaderRoute: typeof FormsFormIdPreviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/$formId/manage': {
      id: '/forms/$formId/manage'
      path: '/forms/$formId/manage'
      fullPath: '/forms/$formId/manage'
      preLoaderRoute: typeof FormsFormIdManageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/$formId/success/$submissionId': {
      id: '/forms/$formId/success/$submissionId'
      path: '/forms/$formId/success/$submissionId'
      fullPath: '/forms/$formId/success/$submissionId'
      preLoaderRoute: typeof FormsFormIdSuccessSubmissionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRoute,
  FormsCreateRoute: FormsCreateRoute,
  SettingsAppearanceRoute: SettingsAppearanceRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  FormsIndexRoute: FormsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  FormsFormIdManageRoute: FormsFormIdManageRoute,
  FormsFormIdPreviewRoute: FormsFormIdPreviewRoute,
  FormsFormIdSchemaRoute: FormsFormIdSchemaRoute,
  FormsFormIdSubmitRoute: FormsFormIdSubmitRoute,
  FormsFormIdSuccessSubmissionIdRoute: FormsFormIdSuccessSubmissionIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
